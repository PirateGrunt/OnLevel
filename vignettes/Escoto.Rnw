% Copyright 2010 Benedict Escoto
%
% This file is part of FAViR.
%
% FAViR is free software: you can redistribute it and/or modify it
% under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 2 of the License, or
% (at your option) any later version.
%
% FAViR is distributed in the hope that it will be useful, but WITHOUT
% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
% or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
% License for more details.
%
% You should have received a copy of the GNU General Public License
% along with FAViR.  If not, see <http://www.gnu.org/licenses/>.

<<Init,results=hide,echo=FALSE>>=
library(favir)
InitPaper()
para.mod <- FavirLoadModule("Parallelogram.fmod.R")
@ 

<<LatexPrelude,echo=FALSE,results=tex>>=
IncludePrelude("The Parallelogram Method", "Benedict Escoto")
@ 

\begin{abstract}
  The parallelogram method is a classic technique for converting
  historical earned premium to current rate levels.  This paper
  demonstrates the parallelogram method.
\end{abstract}

\section{Introduction}

A common way to investigate the proper price of an insurance contract
is to evaluate the historical performance of similar contracts.  Part
of this process may be to select an historical period and compute how
much premium would have been earned over that period if the insurance
in question were written at current rate levels.  The parallelogram
method is a popular way of estimating this on-level earned premium.
See Werner (2009) for an introduction to pricing and an explanation of
this method.

This paper demonstrates the basic parallelogram method.  The
implemented method yields on-level earned premium (or on-level earned
premium factors) by period given historical rate change information.

Unlike the typical parallelogram method, the paper's implementation
allows the rate at which premium is written to change over time, as
specified by a step function.  In theory this should result in more
accurate on-level factors, although the extension of exposures method
should perhaps be used instead if accuracy is important.

Most of the usual limitations of the parallelogram method still apply.
For instance, this paper is not suitable if premium is not earned
evenly over the policy term, if the mix of business has changed, if
calendar details (e.g. that leap years are longer than common years)
are significant, or if rate change information is not available.

\section{Required Input Data}

\label{inputs}
To apply the parallelogram method, you need a record of rate changes
by year, where each rate change is expressed as a percent of premium
before the rate change.  This information is put into a data frame as
shown in figure \ref{rate.change.df}.  

<<InputData,echo=FALSE,results=tex>>=
rate.change.df <- data.frame(year=c(2002, 2003.5, 2004.1, 2004.4, 2005.5),
                             rate.change=c(.07, -.03, .12, .02, .1))
term.len <- 1
rate.change.fdf <- FavirDF(rate.change.df, label="rate.change.df",
                           caption="Historical Rate Changes")
FieldFormatters(rate.change.fdf) <- list(year=MakeFormatter(digits=1,
                                           big.mark=""),
                                         rate.change=formatters$percent0)
FieldHeadings(rate.change.fdf) <- list(year="Date (in years)",
                                       rate.change="Rate Change (\\%)")
print(rate.change.fdf)
@ 

\noindent The term length has also been set at
\textcolor{colorM5}{\Sexpr{term.len}}.

This implementation optionally accepts a data frame that lists the
rate at which written premium is written by period in units of money
(e.g. dollars) per year.  This is shown in figure \ref{written.df}.

<<WrittenDF,echo=FALSE,results=tex>>=
written.df <- data.frame(year=2001:2005,
                         written=c(30, 45, 75, 30, 55))
written.fdf <- FavirDF(written.df, label="written.df",
                       caption="Rate of Premium Written by Period")
FieldHeadings(written.fdf) <- list(year="Period Start", written="Premium Rate")
FieldFormatters(written.fdf) <- list(year=formatters$flat)
print(written.fdf)
@ 

<<OutPeriods,echo=FALSE,results=hide>>=
periods.out <- 2001:2006
@ 

Finally, we need a list of non-overlapping periods that are interested
in.  The method will compute one on-level factor per period.  They
computed for each period as output.  The periods chosen here are those
between these years: 
\textcolor{colorM5}{(\Sexpr{paste(periods.out, collapse=", ")})}.


\section{Method Output}

\subsection{Constant Written Rate}

If the rate of written premium is not specified, a constant rate of 1
unit of premium per year is assumed.  The resulting parallelogram is
shown in figure \ref{basic.graph}.  The numeric labels indicate the
rate level for each parallelogram-shaped region.

<<BasicGraph,echo=FALSE,results=tex>>=
p <- para.mod$Parallelogram(NULL, rate.change.df, term.len)

MakeInforceDF <- function(p, spacing=0.05) {
  # Return a data frame of inforce premium by rating period, suitable for ggplot
  xvals <- seq(from=periods.out[1] - term.len,
               to=Last(periods.out) + term.len,
               by=spacing)
  inforce.graph.df <- data.frame(rating.period=NULL, year=NULL, inforce=NULL)
  for (i in seq(along=p$inforce.funcs)) { # add points for rating period i - 1
    new.df <- data.frame(rating.period=i - 1, year=xvals,
                         inforce=p$inforce.funcs[[i]](xvals))
    inforce.graph.df <- rbind(inforce.graph.df, new.df)
  }
  inforce.graph.df$rating.period <- as.factor(inforce.graph.df$rating.period)
  # now reverse so parallelograms plot in the right direction
  return(inforce.graph.df[nrow(inforce.graph.df):1, ])
}

FindPeriodMidpoints <- function(inforce.graph.df) {
  # Return the midpoints of the rating period, used for text placement
  Helper <- function(df) {
    # Return midpoint of one rating period
    df <- df[df$inforce > 0, ]
    middle.row <- as.integer((nrow(df) + 1)/2)
    x <- df$year[middle.row]
    y <- sum(inforce.graph.df$inforce[inforce.graph.df$year == x]) / 2
    return(data.frame(x=x, y=y))
  }
  result.df <- ddply(inforce.graph.df, .(rating.period), Helper)
  
  # Now jitter the positions to prevent text overlap
  jitter <- ifelse(RowIndicies(result.df) %% 2 == 1, 1, -1)
  result.df$x <- result.df$x + 0.15 * term.len * jitter
  result.df$y <- result.df$y * (1 + 0.3 * jitter)
  return(result.df)
}

inforce.graph.df <- MakeInforceDF(p)
period.colors <- rep(favir.colors[c("M5", "M4")],
                     length.out=length(unique(inforce.graph.df$rating.period)))
names(period.colors) <- NULL # otherwise the names confuse ggplot
basic.plot <- (ggplot(data=inforce.graph.df) +
               geom_area(aes(x=year, y=inforce, group=rating.period,
                             fill=rating.period),
                         alpha=0.5, position="stack") +
               scale_fill_manual(name="Rating Period", values=period.colors) +
               ylim(0, 1) +
               labs(x="Year", y="Inforce Premium"))

# Now add the text to the graph
midpoint.df <- FindPeriodMidpoints(inforce.graph.df)
midpoint.df$rate.level <- MakeFormatter(digits=3, math.mode=FALSE)(
                                                   p$rate.level.df$rate.level)
basic.plot <- (basic.plot +
               geom_text(data=midpoint.df, color=favir.colors["A5"], size=4,
                         aes(x=x, y=y, label=rate.level)))
IncludeGraph(basic.plot, caption="Basic Parallelogram",
             label="basic.graph", width=7 * 2.54, height=2.5 * 2.54)
@ 

The final on-level factors by period are shown in figure
\ref{basic.olef.df}.

<<BasicOLEF,echo=FALSE,results=tex>>=
n <- length(periods.out)
basic.olef.df <- data.frame(start=periods.out[1:(n - 1)],
                            end=periods.out[2:n],
                            olef=para.mod$OLEF(p, periods.out))
basic.olef.fdf <- FavirDF(basic.olef.df,
                          caption="On-Level Factors",
                          label="basic.olef.df",
                          field.formatters=list(start=formatters$flat,
                            end=formatters$flat, olef=formatters$flat3),
                          field.headings=list(start="Period Start",
                            end="Period End", olef="On-Level Factor"))
print(basic.olef.fdf)
@

\subsection{Variable Written Rate}

If the rate at which premium is written changes, this should affect
the on-level factors used.  This implementation of the parallelogram
method allows the written rate function to be specified as a step
function.  Using the assumptions of section \ref{inputs}, the inforce
graph changes as shown in figure \ref{variable.graph}.  In that plot,
the dotted line represents specified the rate of premium written, while
the numeric labels still represent the on-level factor for each rating
period.

<<VariableGraph,echo=FALSE,results=tex>>=
p2 <- para.mod$Parallelogram(written.df, rate.change.df, term.len)

var.graph.df <- MakeInforceDF(p2)
var.plot <- (ggplot(data=var.graph.df) +
             geom_area(aes(x=year, y=inforce, group=rating.period,
                           fill=rating.period),
                       alpha=0.5, position="stack") +
             scale_fill_manual(name="Rating Period", values=period.colors) +
             labs(x="Year", y="Inforce Premium"))
# Now add text
var.midpoint.df <- FindPeriodMidpoints(var.graph.df)
var.midpoint.df$rate.level <- MakeFormatter(digits=3, math.mode=FALSE)(
                                                    p2$rate.level.df$rate.level)
var.plot <- (var.plot +
             geom_text(data=var.midpoint.df, color=favir.colors["A5"], size=4,
                         aes(x=x, y=y, label=rate.level)))

# Finally add the written premium rate
total.written <- para.mod$TotalWrittenFunc(p2)(var.graph.df$year)
var.plot <- (var.plot +
             geom_line(aes(x=var.graph.df$year, y=total.written),
                       color=favir.colors["M5"], linetype=2))

IncludeGraph(var.plot, caption="Parallelogram with Variable Premium Rate",
             label="variable.graph", width=7 * 2.54, height=2.5 * 2.54)
@ 

The on-level earned premium and earned premium factors that reflect
the variable premium rate are shown in figure \ref{var.olef.df}.

<<VariableOLEF,echo=FALSE,results=tex>>=
var.olef.df <- data.frame(start=periods.out[1:(n - 1)],
                          end=periods.out[2:n],
                          earned.premium=para.mod$EarnedPremium(p2, periods.out),
                          olef=para.mod$OLEF(p2, periods.out),
                          olep=para.mod$OLEP(p2, periods.out))
var.olef.fdf <- FavirDF(var.olef.df,
                        caption="Variable Premium Results",
                        label="var.olef.df",
                        field.formatters=list(start=formatters$flat,
                          end=formatters$flat,
                          earned.premium=formatters$comma0,
                          olef=formatters$flat3,
                          olep=formatters$comma1),
                        field.headings=list(start="Period Start",
                          end="Period End",
                          earned.premium="Earned Premium",
                          olef="On-Level Factor",
                          olep="On-Level Earned Premium"))
print(var.olef.fdf)
@ 

Because the premium earned over any time period is just the area under
the inforce premium curve divided by the term length, the traditional
parallelogram method will work, although it is more complicated to
calculate all the areas correctly.  To obtain the variable premium
results, the algorithm divides up all the regions into triangles and
quadrilaterals and integrates them piece by piece.

For more details on this and on other ways the assumptions of
parallelogram method can be relaxed, see Ross (1975).

\section{Bibliography}

\begin{enumerate}
  \item Ross, James P.  ``Generalized Premium Formulae''.
    \emph{Proceedings of the Casualty Actuarial Society Casualty
      Actuarial Society}, Arlington, Virginia 1975: LXII 50-61.\\
      \texttt{http://www.casact.org/dare/index.cfm?fuseaction=view\&abstrID=1673}
  \item Werner, G. and Modlin, C.  \emph{Basic Ratemaking}.  Casualty
    Actuarial Society, Version 2, October 2009.
    \texttt{http://www.casact.org/pubs/Werner\_Modlin\_Ratemaking.pdf}

\end{enumerate}

\section{Legal}

<<Legal,echo=FALSE,results=tex>>=
IncludeLegal(author="Benedict Escoto", year=2010)
@ 


\end{document}
